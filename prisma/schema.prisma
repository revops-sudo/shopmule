generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id                Int      @id @default(autoincrement())
  created_time      DateTime @default(now())
  email             String   @unique
  first_name        String?
  last_name         String?
  gender            String?
  profile_image_url String?
  user_id           String   @unique
  subscription      String?
  analyses          analysis[]      @relation("UserAnalyses")
  payments          payments[]      @relation("UserPayments")
  subscriptions     subscriptions[] @relation("UserSubscriptions")
  invoices          invoices[]      @relation("UserInvoices")
}

model payments {
  id               Int      @id @default(autoincrement())
  created_time     DateTime @default(now())
  stripe_id        String
  email            String
  amount           String
  payment_time     String
  payment_date     String
  currency         String
  user             user     @relation("UserPayments", fields: [user_id], references: [user_id])
  user_id          String
  customer_details String
  payment_intent   String
}

model subscriptions {
  id                        Int      @id @default(autoincrement())
  created_time              DateTime @default(now())
  subscription_id           String
  stripe_user_id            String
  status                    String
  start_date                String
  end_date                  String?
  plan_id                   String
  default_payment_method_id String?
  email                     String
  user                      user     @relation("UserSubscriptions", fields: [user_id], references: [user_id])
  user_id                   String
}

model subscriptions_plans {
  id           Int      @id @default(autoincrement())
  created_time DateTime @default(now())
  plan_id      String
  name         String
  description  String
  amount       String
  currency     String
  interval     String
}

model invoices {
  id              Int      @id @default(autoincrement())
  created_time    DateTime @default(now())
  invoice_id      String
  subscription_id String
  amount_paid     String
  amount_due      String?
  currency        String
  status          String
  email           String
  user            user     @relation("UserInvoices", fields: [user_id], references: [user_id])
  user_id         String
}

model analysis {
  id                     Int      @id @default(autoincrement())
  created_at             DateTime @default(now())
  task_id                String   @unique
  product_name           String
  user                   user     @relation("UserAnalyses", fields: [userId], references: [id])
  userId                 Int
  review_count           Int?
  review_rating          Float?
  avg_listing_date       DateTime?
  monthly_search_volume  Int?
  trendiness             Float?
  seasonality            Int?
  rev_per_month          Float?
  units_sold_per_month   Int?
  pricing                Float?
  pricing_disparity      Float?
  margin_factor          Float?
  liability              Int?
  complexity             Int?
  mule_score             Int?
}